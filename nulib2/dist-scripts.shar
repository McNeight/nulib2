#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2.1).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 2002-10-11 17:29 PDT by <fadden@shiny>.
# Source directory was `/home/fadden/STAGE'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#    856 -rwxr-xr-x prep.sh
#    477 -rwxr-xr-x post.sh
#    564 -rwxr-xr-x mkzip
#      4 -rw-r--r-- VERSION
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
if touch -am -t 200112312359.59 $$.touch >/dev/null 2>&1 && test ! -f 200112312359.59 -a -f $$.touch; then
  shar_touch='touch -am -t $1$2$3$4$5$6.$7 "$8"'
elif touch -am 123123592001.59 $$.touch >/dev/null 2>&1 && test ! -f 123123592001.59 -a ! -f 123123592001.5 -a -f $$.touch; then
  shar_touch='touch -am $3$4$5$6$1$2.$7 "$8"'
elif touch -am 1231235901 $$.touch >/dev/null 2>&1 && test ! -f 1231235901 -a -f $$.touch; then
  shar_touch='touch -am $3$4$5$6$2 "$8"'
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 200112312359.59 123123592001.59 123123592001.5 1231235901 $$.touch
#
if mkdir _sh01765; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= prep.sh ==============
if test -f 'prep.sh' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'prep.sh' '(file already exists)'
else
  $echo 'x -' extracting 'prep.sh' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'prep.sh' &&
#!/bin/sh
set -e
X
version=`cat VERSION`
echo "Preparing for version=$version."
X
libdir=nufxlib-$version
appdir=nulib2-$version
X
if [ -d $libdir ]; then
X	echo "libdir exists, trashing"
X	read x
X	rm -rf $libdir
fi
mkdir $libdir
cd $libdir
zcat $HOME/BAK/nufxlib.tar.gz | tar xvf -
make distclean
cd ..
X
if [ -d $appdir ]; then
X	echo "appdir exists, trashing"
X	read x
X	rm -rf $appdir
fi
mkdir $appdir
cd $appdir
zcat $HOME/BAK/nulib2.tar.gz | tar xvf -
make distclean
rm README-Win32.txt
X
sed -e "s/VERSION..= 0/VERSION		= $version/" < Makefile.in > Makefile.new
set +e ; diff Makefile.in Makefile.new ; set -e
mv -f Makefile.new Makefile.in
X
sed -e "s/VERSION=0/VERSION=$version/" < Makefile.msc > Makefile.new
set +e ; diff Makefile.msc Makefile.new ; set -e
mv -f Makefile.new Makefile.msc
X
cd ..
X
echo IMPORTANT: put the release into ChangeLog.txt
X
Xexit 0
SHAR_EOF
  (set 20 02 10 11 15 40 07 'prep.sh'; eval "$shar_touch") &&
  chmod 0755 'prep.sh' ||
  $echo 'restore of' 'prep.sh' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'prep.sh:' 'MD5 check failed'
403d6849f37fe0aaf33d9380611e83b3  prep.sh
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'prep.sh'`"
    test 856 -eq "$shar_count" ||
    $echo 'prep.sh:' 'original size' '856,' 'current size' "$shar_count!"
  fi
fi
# ============= post.sh ==============
if test -f 'post.sh' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'post.sh' '(file already exists)'
else
  $echo 'x -' extracting 'post.sh' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'post.sh' &&
#!/bin/sh
set -e
X
version=`cat VERSION`
echo "Staging with version=$version."
X
libdir=nufxlib-$version
appdir=nulib2-$version
X
set -x
#rm -f $appdir/MiscStuff.c
#cp $libdir/MiscStuff.c $appdir
#rm -f $appdir/MiscStuff.h
#cp $libdir/MiscStuff.h $appdir
#rm -f $appdir/SunOS4.h
#cp $libdir/SunOS4.h $appdir
X
tar cf nulibdist-$version.tar $libdir $appdir
gzip -9 nulibdist-$version.tar
set +x
X
echo ""
echo "IMPORTANT: did you put the release into ChangeLog.txt?"
echo ""
X
Xexit 0
SHAR_EOF
  (set 20 02 10 11 13 56 59 'post.sh'; eval "$shar_touch") &&
  chmod 0755 'post.sh' ||
  $echo 'restore of' 'post.sh' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'post.sh:' 'MD5 check failed'
f662165f13315e3484e1e182d0e4afcb  post.sh
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'post.sh'`"
    test 477 -eq "$shar_count" ||
    $echo 'post.sh:' 'original size' '477,' 'current size' "$shar_count!"
  fi
fi
# ============= mkzip ==============
if test -f 'mkzip' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'mkzip' '(file already exists)'
else
  $echo 'x -' extracting 'mkzip' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'mkzip' &&
#!/bin/sh
set -e
set -x
X
version=`cat VERSION`
echo "Preparing for version=$version."
X
archive=nulib2_${version}_win32.zip
basedir=/dosc/Src
#basedir=$HOME/tmp
mansrc=$HOME/Nulib2/nulib2/nulib2.1
manout=$HOME/nulib2.man
X
rm -f $archive
rm -f $manout
X
zip -9j $archive $HOME/Nulib2/nulib2/README-Win32.txt
nroff -man $mansrc | col -b > $manout
zip -9jl $archive $manout
rm $manout
zip -9j $archive $basedir/nulib2-$version/nulib2.exe
zip -9jl $archive $basedir/nufxlib-$version/samples/README-S.txt
zip -9j $archive $basedir/nufxlib-$version/samples/*.exe
X
Xexit 0
X
SHAR_EOF
  (set 20 02 10 11 16 01 06 'mkzip'; eval "$shar_touch") &&
  chmod 0755 'mkzip' ||
  $echo 'restore of' 'mkzip' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'mkzip:' 'MD5 check failed'
dc224623d9d2d9df478bc622ecf7f61a  mkzip
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'mkzip'`"
    test 564 -eq "$shar_count" ||
    $echo 'mkzip:' 'original size' '564,' 'current size' "$shar_count!"
  fi
fi
# ============= VERSION ==============
if test -f 'VERSION' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'VERSION' '(file already exists)'
else
  $echo 'x -' extracting 'VERSION' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'VERSION' &&
110
SHAR_EOF
  (set 20 02 10 11 13 53 35 'VERSION'; eval "$shar_touch") &&
  chmod 0644 'VERSION' ||
  $echo 'restore of' 'VERSION' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'VERSION:' 'MD5 check failed'
2fe51daae840593fb0f4076b307ccefb  VERSION
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'VERSION'`"
    test 4 -eq "$shar_count" ||
    $echo 'VERSION:' 'original size' '4,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh01765
exit 0
